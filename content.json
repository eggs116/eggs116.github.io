[{"title":"多栏布局（一）--- 左右布局","date":"2018-10-03T10:58:47.000Z","path":"Multi-Column_Layout_lr/","text":"1 左固定，右自适应1.1 浮动解决方案123456789101112131415161718&lt;style&gt; html,body&#123; margin: 0; padding:0; &#125; div&#123; min-height: 100px; &#125; .left &#123; float: left; width: 300px; background: red; &#125; .right &#123; margin-left: 300px; background: yellowgreen; &#125;&lt;/style&gt; 1234567891011&lt;div class=\"wrap\"&gt; &lt;div class=\"left\"&gt;&lt;/div&gt; &lt;div class=\"right\"&gt;浮动解决方案 我宽度自适应我宽度自适应我宽度自适应 &lt;p&gt;增加高度&lt;/p&gt; &lt;p&gt;增加高度&lt;/p&gt; &lt;p&gt;增加高度&lt;/p&gt; &lt;p&gt;增加高度&lt;/p&gt; &lt;p&gt;增加高度&lt;/p&gt; &lt;p&gt;增加高度&lt;/p&gt; &lt;/div&gt;&lt;/div&gt; 注：上面.right 的 margin-left 属性可以用 overflow:hidden 来替代（让.right 开启 BFC）特点：两栏高度不一致优点：兼容性好缺点：浮动元素过多会导致页面结构复杂，并且要清除浮动，否则会导致页面混乱 1.2 定位解决方案1.2.1 定位解决方案 1123456789101112131415161718192021&lt;style&gt; html,body&#123; margin: 0; padding:0; &#125; div&#123; min-height: 100px; &#125; .wrap&#123; position: relative; &#125; .left &#123; position: absolute; width: 300px; background: red; &#125; .right &#123; margin-left: 300px; background: yellowgreen; &#125;&lt;/style&gt; 1234567891011&lt;div class=\"wrap\"&gt; &lt;div class=\"left\"&gt;&lt;/div&gt; &lt;div class=\"right\"&gt;浮动解决方案 我宽度自适应我宽度自适应我宽度自适应 &lt;p&gt;增加高度&lt;/p&gt; &lt;p&gt;增加高度&lt;/p&gt; &lt;p&gt;增加高度&lt;/p&gt; &lt;p&gt;增加高度&lt;/p&gt; &lt;p&gt;增加高度&lt;/p&gt; &lt;p&gt;增加高度&lt;/p&gt; &lt;/div&gt;&lt;/div&gt; 1.2.2 定位解决方案 212345678910111213141516171819202122232425262728&lt;style&gt; html, body &#123; margin: 0; padding: 0; &#125; div &#123; min-height: 100px; &#125; .wrap &#123; position: relative; &#125; .left &#123; position: absolute; width: 300px; background: red; &#125; .right &#123; position: absolute; left: 300px; right: 0; background: yellowgreen; &#125;&lt;/style&gt; 1234567891011&lt;div class=\"wrap\"&gt; &lt;div class=\"left\"&gt;&lt;/div&gt; &lt;div class=\"right\"&gt;浮动解决方案 我宽度自适应我宽度自适应我宽度自适应 &lt;p&gt;增加高度&lt;/p&gt; &lt;p&gt;增加高度&lt;/p&gt; &lt;p&gt;增加高度&lt;/p&gt; &lt;p&gt;增加高度&lt;/p&gt; &lt;p&gt;增加高度&lt;/p&gt; &lt;p&gt;增加高度&lt;/p&gt; &lt;/div&gt;&lt;/div&gt; 特点：两栏高度不一致优点：兼容性好缺点：脱离文档流，增加页面结构的复杂程度 1.3 table 解决方案123456789101112131415161718192021222324252627&lt;style&gt; html, body &#123; margin: 0; padding: 0; &#125; div &#123; min-height: 100px; &#125; .wrap &#123; display: table; width: 100%; &#125; .left &#123; display: table-cell; width: 300px; background: red; &#125; .right &#123; display: table-cell; background: yellowgreen; &#125;&lt;/style&gt; 1234567891011&lt;div class=\"wrap\"&gt; &lt;div class=\"left\"&gt;&lt;/div&gt; &lt;div class=\"right\"&gt;浮动解决方案 我宽度自适应我宽度自适应我宽度自适应 &lt;p&gt;增加高度&lt;/p&gt; &lt;p&gt;增加高度&lt;/p&gt; &lt;p&gt;增加高度&lt;/p&gt; &lt;p&gt;增加高度&lt;/p&gt; &lt;p&gt;增加高度&lt;/p&gt; &lt;p&gt;增加高度&lt;/p&gt; &lt;/div&gt;&lt;/div&gt; 特点：两栏高度一致 1.4 flex 解决方案12345678910111213141516171819202122232425&lt;style&gt; html, body &#123; margin: 0; padding: 0; &#125; div &#123; min-height: 100px; &#125; .wrap &#123; display: flex; &#125; .left &#123; width: 300px; background: red; &#125; .right &#123; flex: 1; background: yellowgreen; &#125;&lt;/style&gt; 1234567891011&lt;div class=\"wrap\"&gt; &lt;div class=\"left\"&gt;&lt;/div&gt; &lt;div class=\"right\"&gt;浮动解决方案 我宽度自适应我宽度自适应我宽度自适应 &lt;p&gt;增加高度&lt;/p&gt; &lt;p&gt;增加高度&lt;/p&gt; &lt;p&gt;增加高度&lt;/p&gt; &lt;p&gt;增加高度&lt;/p&gt; &lt;p&gt;增加高度&lt;/p&gt; &lt;p&gt;增加高度&lt;/p&gt; &lt;/div&gt;&lt;/div&gt; 特点：两栏高度一致优点：CSS3 新属性，实现简单缺点：兼容性差 1.5 grid 解决方案123456789101112131415161718192021222324&lt;style&gt; html, body &#123; margin: 0; padding: 0; &#125; div &#123; min-height: 100px; &#125; .wrap &#123; display: grid; grid-template-columns: 300px auto; &#125; .left &#123; background: red; &#125; .right &#123; background: yellowgreen; &#125;&lt;/style&gt; 1234567891011&lt; div class=\"wrap\"&gt; &lt;div class=\"left\"&gt;&lt;/div&gt; &lt;div class=\"right\"&gt;浮动解决方案 我宽度自适应我宽度自适应我宽度自适应 &lt;p&gt;增加高度&lt;/p&gt; &lt;p&gt;增加高度&lt;/p&gt; &lt;p&gt;增加高度&lt;/p&gt; &lt;p&gt;增加高度&lt;/p&gt; &lt;p&gt;增加高度&lt;/p&gt; &lt;p&gt;增加高度&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; 特点：两栏高度一致优点：CSS3新属性，实现简单缺点：兼容性差","tags":[{"name":"html","slug":"html","permalink":"http://yyeggs.com/tags/html/"},{"name":"css","slug":"css","permalink":"http://yyeggs.com/tags/css/"}]},{"title":"页面布局--居中问题","date":"2018-08-16T03:22:40.000Z","path":"layout_center/","text":"1 水平居中1.1 行内或类行内元素（比如图片、文本、链接等）块级父容器设置text-align: center; 1.2 块级元素1.2.1 固定宽度(注：in代表子元素，out代表父元素) in—-margin-left:(out.width-in.width)/2; in—-margin:0 auto;—————auto out—-position:relative;|in—-position:absolute;left:50%;margin-left:-in.width/2;—————定位 out—-display:flex;justify-content:center;(关于flex请看后续文章)—————flex out—-display:table-cell;|in—-margin:0 auto;—————table-cell out—-display:inline-block;|in—-margin:0 auto;text-align:center;—————inline-block 在in前增加隐藏节点hide和in均float:left且hide.width:(out.width-in.width)/2;hide的高度为非0任意值—————增加节点 in—-position:relative;left:50%;transform:translateX(-50%);—————transform 1.2.2 不定宽度 out—-text-align:certer;|in—-display:inline-block;—————inline-block in—-width:fit-content(宽度收缩到内容);margin:0 auto;—————fit-content out—-position:relative|in—-position:absolute;left:50%;transform:translateX(-50%);—————transform 2. 垂直居中2.1 行内或类行内元素2.1.1 不定高度padding-top==padding-bottom(注：一般行内元素不能给height) 2.1.2 固定高度单行line-height==height 多行 父容器设置display:table-cell;vertical-align:middle;(注：若块级嵌套父容器嵌套多行文字，则外层块级元素也需设置display:table;)—————table-cell 父容器设置display:flex;flex-direction:column;justify-content:center;—————flex 两级父容器，文本嵌套在in里，out高固定，|out::before—-content:””;display:inline-block;vertical-align:middle;height:100%;|in高不固定，in—-display:inline-block;vertical-align:middle; 2.2 块级元素2.2.1 固定高度 in—-margin-top:(out.height-in.height)/2; out—-position:relative;|in—-position:absolute;top:50%;margin-top:-in.height/2;—————定位 在in前增加隐藏节点hide且hide.height:(out.height-in.height)/2;hide的宽度为非0任意值—————增加节点 out::before—-content:””;display:inline-block;vertical-align:middle;height:100%;|in—-display:inline-block;vertical-align:middle;—————伪元素 in—-position:relative;top:50%;transform:translateY(-50%);—————transform 2.2.2 不定高度 out—-display:table-cell;vertical-align:middle; out—-display:flex;align-items:center; out—-display:flex;flex-direction:column;justify-content:center; out—-display:flex;|in—-align-self:center; —————flex out—-position:relative;|in—-position:absolute;top:50%;transform:translateY(-50%);—————transform 3 水平垂直居中3.1 固定宽高 in—-margin-left:(out.width-in.width)/2;margin-top:(out.height-in.height)/2; out—-position:relative;|in—-position:absolute;top:50%;left:50%;margin-top:-in.height/2;margin-left:-in.width/2; out—-position:relative;|in—-position:absolute;left:0;top:0;right:0;bottom:0;margin:auto;—————定位 out—-display:flex;justify-content:center;align-items:center; out—-display:flex;justify-content:center;|in—-align-self:center;—————flex out—-display:table-cell;vertical-align:middle;|in—-margin:auto;—————table-cell in—-position:relative;left:50%;top:50%;transform:translate(-50%,-50%);—————transform in—-margin:calc(50% - in.height/2) auto;(注：cala()内的计算符号前后必须有空格) 3.2 不定宽高out—-position:relative;|in—-position:absolute;left:50%;top:50%;transform:translate(-50%,-50%); 注：以上transform方法当计算结果含小数位时，会导致整个元素变模糊，解决方案是父级元素设置transform-style:preserve-3d;","tags":[{"name":"html","slug":"html","permalink":"http://yyeggs.com/tags/html/"},{"name":"css","slug":"css","permalink":"http://yyeggs.com/tags/css/"},{"name":"页面布局","slug":"页面布局","permalink":"http://yyeggs.com/tags/页面布局/"}]}]